#!/usr/bin/env bash

### Helpers begin
err() { echo -e "${color:+\e[31m}[!] $*${color:+\e[0m}" >&2; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*${color:+\e[0m}"; }
info() { echo -e "${color:+\e[37m}[*] $*${color:+\e[0m}"; }
subinfo() { echo -e "${color:+\e[36m}[=] $*${color:+\e[0m}"; }
warn() { echo -e "${color:+\e[33m}[-] $*${color:+\e[0m}"; }
### Helpers end

clean() { rm -f -r "$tmp"; }

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS]

DESCRIPTION
    Prepare alpine system for VPN framework.

OPTIONS
    -h, --help    Display this help message
        --obfs    Install obfsproxy

EOF
    exit "$1"
}

declare -a args
unset help obfs
tmp="/tmp/avfinstall"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift; args+=("$@"); break ;;
        "-h"|"--help") help="true" ;;
        "--obfs") obfs="true" ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Help info
[[ -z $help ]] || usage 0

# Fix repos
info "CONVERTING TO EDGE"
sed -i -r -e "/cdrom|v3./d" -e "s/#//g" /etc/apk/repositories

# Install deps
info "UPDATING SYSTEM"
apk update
apk upgrade -a -U
apk add bind-tools curl e2fsprogs-extra findutils grep iproute2 \
    jq libqrencode openrc openssh-server openssl openvpn sed vim \
    vimdiff wireguard-tools

# Install obfsproxy for OpenVPN
if [[ -n $obfs ]]; then
    subinfo "INSTALLING OBFSPROXY DEPS"

    # Install build deps
    apk add bzip2 gcc musl-dev py2-setuptools python2 python2-dev tar

    # Setup tmp dir
    clean
    mkdir -p "$tmp"

    # shellcheck disable=SC2164
    pushd "$tmp"

    # Get pathlib
    curl -O "https://files.pythonhosted.org/packages/df/16/e9d6bcf1aed52a55bc1696324ab22586716053b3e97b85266e0f3ad36bae/pathlib2-2.3.6.tar.gz"
    tar -f pathlib2-2.3.6.tar.gz -x -z
    (cd pathlib2-2.3.6 && python2 ./setup.py install --user)

    # Get incremental
    curl -O "https://files.pythonhosted.org/packages/4f/c5/430765c697afc217c8491785de321a21fa4d983dda14bcd82feb965b0593/incremental-21.3.0.tar.gz"
    tar -f incremental-21.3.0.tar.gz -x -z
    (cd incremental-21.3.0 && python2 ./setup.py install --user)

    # Get idna
    curl -O "https://files.pythonhosted.org/packages/ea/b7/e0e3c1c467636186c39925827be42f16fee389dc404ac29e930e9136be70/idna-2.10.tar.gz"
    tar -f idna-2.10.tar.gz -x -z
    (cd idna-2.10 && python2 ./setup.py install --user)

    # Get twisted
    curl -O "https://files.pythonhosted.org/packages/4a/b4/4973c7ccb5be2ec0abc779b7d5f9d5f24b17b0349e23240cfc9dc3bd83cc/Twisted-20.3.0.tar.bz2"
    bzip2 -d -k Twisted-20.3.0.tar.bz2
    tar -f Twisted-20.3.0.tar -x
    sed -i "s/pathlib/pathlib2/g" ./Twisted-20.3.0/setup.py
    (cd Twisted-20.3.0 && python2 ./setup.py install --user)

    # Get obfsproxy
    curl -O "https://files.pythonhosted.org/packages/f6/25/ca704db7b8d0e462cd942ffad59674e4b2d33057c2587eab8a6b846cee1d/obfsproxy-0.2.13.tar.gz"
    tar -f obfsproxy-0.2.13.tar.gz -x -z
    sed -i "s/pathlib/pathlib2/g" ./obfsproxy-0.2.13/setup.py
    (cd obfsproxy-0.2.13 && python2 ./setup.py install --user)

    # shellcheck disable=SC2164
    popd

    # Clean up
    clean

    # Uninstall build deps
    apk del -r bzip2 gcc musl-dev python2-dev tar
fi

# Tweak some system config files

## Modules
info "ADDING TUN MODULE"
echo "tun" >/etc/modules-load.d/avf.conf

## Enable forwarding
info "ENABLING IPV4 FORWARDING"
echo "net.ipv4.ip_forward=1" >/etc/sysctl.d/avf.conf

## Update dnsmasq, if needed
info "CONFIGURING DNSMASQ"
apk add dnsmasq
mkdir -p /etc/dnsmasq.d
cat >/etc/dnsmasq.d/default.conf <<EOF
no-resolv
expand-hosts
server=8.8.8.8
EOF
rc-update add dnsmasq
rc-service dnsmasq start

## Fix /etc/resolv.conf to use dnsmasq
info "CONFIGURING UDHCPC"
mkdir -p /etc/udhcpc
echo "RESOLV_CONF=no" >/etc/udhcpc/udhcpc.conf

info "CONFIGURING RESOLV.CONF TO ONLY USE DNSMASQ"
echo "nameserver 127.0.0.1" >/etc/resolv.conf

## Enable iptables
info "CONFIGURING IPTABLES"
apk add iptables
rc-update add iptables
/etc/init.d/iptables save
rc-service iptables start

## Create default local scripts
info "CONFIGURING DEFAULT LOCAL.D SCRIPTS"
mkdir -p /etc/local.d
cat >/etc/local.d/z_user.start <<EOF
#!/usr/bin/env bash

export HOME="/root"
export PATH="\$HOME/.local/bin:\$PATH"
EOF
chmod 755 /etc/local.d/z_user.start
cat >/etc/local.d/z_user.stop <<EOF
#!/usr/bin/env bash

export HOME="/root"
export PATH="\$HOME/.local/bin:\$PATH"
EOF
chmod 755 /etc/local.d/z_user.stop

## Setup bash
info "CONFIGURING DEFAULT SHELL (BASH)"
sed -i -r "s/^(root:x.+)\/bin\/ash/\1\/bin\/bash/g" /etc/passwd
grep -q -P -s "#\savf$" /root/.bash_profile || \
    echo "export PATH=\"~/.local/bin:\$PATH\" # avf" \
    >>/root/.bash_profile

## Make config dir
mkdir -p /root/.config

# Reboot
./installer
good "You should reboot (some services only start on boot)"
good "Afterwards, run \"avf -h\""
